## Stage 1 : build with npm for static web assets
FROM node:12.19.0-alpine AS js-builder
WORKDIR /usr/src/app
RUN mkdir -p /usr/src/app
COPY src/frontend /usr/src/app
RUN npm install
RUN npm run generate

## Stage 2 : build with maven builder image with native capabilities
FROM quay.io/quarkus/centos-quarkus-maven:20.2.0-java11 AS java-builder
COPY pom.xml /usr/src/app/
RUN mvn -f /usr/src/app/pom.xml -B de.qaware.maven:go-offline-maven-plugin:1.2.5:resolve-dependencies
COPY src /usr/src/app/src
COPY --from=js-builder /usr/src/app/dist /usr/src/app/target/generated-resources/assets/resources/META-INF/resources
USER root
RUN chown -R quarkus /usr/src/app
USER quarkus
RUN mvn -f /usr/src/app/pom.xml -Pnative package

# Stage 3 : create the docker final image
FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1
WORKDIR /work/
COPY --from=java-builder /usr/src/app/target/*-runner /work/application

# set up permissions for user `1001`
RUN chmod 775 /work /work/application \
  && chown -R 1001 /work \
  && chmod -R "g+rwX" /work \
  && chown -R 1001:root /work

EXPOSE 8080
USER 1001

CMD ["./application", "-Dquarkus.http.host=0.0.0.0"]
